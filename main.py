import logging
from telegram.ext import *
# from telegram.ext import Application, MessageHandler, filters
from adminregistration import Admin_registration
# from stoke_analysis import Moex_ta
import telegram
from telegram import ReplyKeyboardMarkup
from token_bot import TOKEN
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)

logger = logging.getLogger(__name__)


reply_keyboard = [['/stockmarket', '/functions'],
                  ['/settings', '/info_admin']]
reply_keyboard_2 = [['/send_document']]
reply_keyboard_3 = [['/start']]
reply_keyboard_4 = [['/main_menu']]
reply_keyboard_5 = [['/documentation', '/admin_user'],
                    ['/main_menu']]


markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=False)
markup_2 = ReplyKeyboardMarkup(reply_keyboard_2, one_time_keyboard=False)
markup_3 = ReplyKeyboardMarkup(reply_keyboard_3, one_time_keyboard=True)
markup_4 = ReplyKeyboardMarkup(reply_keyboard_4, one_time_keyboard=True)
markup_5 = ReplyKeyboardMarkup(reply_keyboard_5, one_time_keyboard=False)


async def start(update, context):
    await update.message.reply_text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",
                                    reply_markup=markup_4)


async def admin_user(update, context):
    login_admin = context.args[0]
    password_admin = context.args[1]
    object_class = Admin_registration(login_admin, password_admin)
    if object_class.is_checking_for_admin():
        await update.message.reply_text("üìÅ")
        await update.message.reply_document('admin_registration.json')
    else:
        await update.message.reply_text('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω')


# async def to_the_main_menu(update, context):
#     await update.message.command('/main_menu')


async def back(update, context):
    await update.message.command('/main_menu')


async def documentation(update, context):
    await update.message.reply_text('üìÅ')
    await update.message.reply_document('–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è.docx')


async def main_menu(update, context):
    user = update.effective_user
    await update.message.reply_html(
        rf"–ü—Ä–∏–≤–µ—Ç {user.mention_html()}! –Ø –±–æ—Ç, –∏–º–µ—é—â–∏–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º–∏ –±–∏—Ä–∂–∏, –∏ –∏–º–µ—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –æ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤ –ø—É–Ω–∫—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
        reply_markup=markup
    )
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é")


async def admin_passwd(update, context):
    login_admin = context.args[0]
    password_admin = context.args[1]
    object_class = Admin_registration(login_admin, password_admin)
    if object_class.checking_for_admin():
        object_class.registration_admin()
        await update.message.reply_text("üîê")
        await update.message.reply_text("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ")
        await update.message.reply_text('–ù–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ', reply_markup=markup_3)
    else:
        await update.message.reply_text("‚ùå")
        await update.message.reply_text("–õ–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –∑–∞–Ω—è—Ç")


async def help(update, context):
    await update.message.reply_document(
        "–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è.docx")


async def information_admin(update, context):
    await update.message.reply_text(
        "–°–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞: –†—è–∑–∞–Ω–æ–≤, –†–æ–º–∞–Ω", reply_markup=markup_4)


async def stockmarket(update, context):
    await update.message.reply_text("1")


async def functions(update, context):
    await update.message.reply_text("2")


async def settings(update, context):
    await update.message.reply_text('üí°', reply_markup=markup_5)


def main():
    application = Application.builder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("back", back))
    application.add_handler(CommandHandler("admin_user", admin_user))
    application.add_handler(CommandHandler("documentation", documentation))
    # application.add_handler(CommandHandler("to_the_main_menu", to_the_main_menu))
    application.add_handler(CommandHandler('main_menu', main_menu))
    application.add_handler(CommandHandler("info_admin", information_admin))
    application.add_handler(CommandHandler("stockmarket", stockmarket))
    application.add_handler(CommandHandler("functions", functions))
    application.add_handler(CommandHandler("settings", settings))
    application.add_handler(CommandHandler("help", help))
    application.add_handler(CommandHandler("admin_passwd", admin_passwd))
    application.run_polling()


if __name__ == '__main__':
    main()
